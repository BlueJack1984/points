<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.MoneyUseMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.MoneyUse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="newusername" jdbcType="VARCHAR" property="newusername" />
    <result column="moneyuse" jdbcType="DOUBLE" property="moneyuse" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="moneybefor" jdbcType="DOUBLE" property="moneybefor" />
    <result column="emoney" jdbcType="DOUBLE" property="emoney" />
    <result column="emoneybefor" jdbcType="DOUBLE" property="emoneybefor" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="posttime" jdbcType="TIMESTAMP" property="posttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, newusername, moneyuse, money, moneybefor, emoney, emoneybefor, type, 
    posttime
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.pojo.MoneyUseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from money_use
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from money_use
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from money_use
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.pojo.MoneyUseExample">
    delete from money_use
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.MoneyUse">
    insert into money_use (id, username, newusername, 
      moneyuse, money, moneybefor, 
      emoney, emoneybefor, type, 
      posttime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{newusername,jdbcType=VARCHAR}, 
      #{moneyuse,jdbcType=DOUBLE}, #{money,jdbcType=DOUBLE}, #{moneybefor,jdbcType=DOUBLE}, 
      #{emoney,jdbcType=DOUBLE}, #{emoneybefor,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{posttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.MoneyUse">
    insert into money_use
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="newusername != null">
        newusername,
      </if>
      <if test="moneyuse != null">
        moneyuse,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="moneybefor != null">
        moneybefor,
      </if>
      <if test="emoney != null">
        emoney,
      </if>
      <if test="emoneybefor != null">
        emoneybefor,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="posttime != null">
        posttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="newusername != null">
        #{newusername,jdbcType=VARCHAR},
      </if>
      <if test="moneyuse != null">
        #{moneyuse,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="moneybefor != null">
        #{moneybefor,jdbcType=DOUBLE},
      </if>
      <if test="emoney != null">
        #{emoney,jdbcType=DOUBLE},
      </if>
      <if test="emoneybefor != null">
        #{emoneybefor,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="posttime != null">
        #{posttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.pojo.MoneyUseExample" resultType="java.lang.Long">
    select count(*) from money_use
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update money_use
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.newusername != null">
        newusername = #{record.newusername,jdbcType=VARCHAR},
      </if>
      <if test="record.moneyuse != null">
        moneyuse = #{record.moneyuse,jdbcType=DOUBLE},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.moneybefor != null">
        moneybefor = #{record.moneybefor,jdbcType=DOUBLE},
      </if>
      <if test="record.emoney != null">
        emoney = #{record.emoney,jdbcType=DOUBLE},
      </if>
      <if test="record.emoneybefor != null">
        emoneybefor = #{record.emoneybefor,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.posttime != null">
        posttime = #{record.posttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update money_use
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      newusername = #{record.newusername,jdbcType=VARCHAR},
      moneyuse = #{record.moneyuse,jdbcType=DOUBLE},
      money = #{record.money,jdbcType=DOUBLE},
      moneybefor = #{record.moneybefor,jdbcType=DOUBLE},
      emoney = #{record.emoney,jdbcType=DOUBLE},
      emoneybefor = #{record.emoneybefor,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      posttime = #{record.posttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.MoneyUse">
    update money_use
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="newusername != null">
        newusername = #{newusername,jdbcType=VARCHAR},
      </if>
      <if test="moneyuse != null">
        moneyuse = #{moneyuse,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="moneybefor != null">
        moneybefor = #{moneybefor,jdbcType=DOUBLE},
      </if>
      <if test="emoney != null">
        emoney = #{emoney,jdbcType=DOUBLE},
      </if>
      <if test="emoneybefor != null">
        emoneybefor = #{emoneybefor,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="posttime != null">
        posttime = #{posttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.MoneyUse">
    update money_use
    set username = #{username,jdbcType=VARCHAR},
      newusername = #{newusername,jdbcType=VARCHAR},
      moneyuse = #{moneyuse,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      moneybefor = #{moneybefor,jdbcType=DOUBLE},
      emoney = #{emoney,jdbcType=DOUBLE},
      emoneybefor = #{emoneybefor,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      posttime = #{posttime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.MoneyUse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="newusername" jdbcType="VARCHAR" property="newusername" />
    <result column="moneyuse" jdbcType="DOUBLE" property="moneyuse" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="moneybefor" jdbcType="DOUBLE" property="moneybefor" />
    <result column="emoney" jdbcType="DOUBLE" property="emoney" />
    <result column="emoneybefor" jdbcType="DOUBLE" property="emoneybefor" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="posttime" jdbcType="TIMESTAMP" property="posttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, newusername, moneyuse, money, moneybefor, emoney, emoneybefor, type, 
    posttime
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.pojo.MoneyUseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from money_use
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from money_use
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from money_use
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.pojo.MoneyUseExample">
    delete from money_use
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.MoneyUse">
    insert into money_use (id, username, newusername, 
      moneyuse, money, moneybefor, 
      emoney, emoneybefor, type, 
      posttime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{newusername,jdbcType=VARCHAR}, 
      #{moneyuse,jdbcType=DOUBLE}, #{money,jdbcType=DOUBLE}, #{moneybefor,jdbcType=DOUBLE}, 
      #{emoney,jdbcType=DOUBLE}, #{emoneybefor,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{posttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.MoneyUse">
    insert into money_use
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="newusername != null">
        newusername,
      </if>
      <if test="moneyuse != null">
        moneyuse,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="moneybefor != null">
        moneybefor,
      </if>
      <if test="emoney != null">
        emoney,
      </if>
      <if test="emoneybefor != null">
        emoneybefor,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="posttime != null">
        posttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="newusername != null">
        #{newusername,jdbcType=VARCHAR},
      </if>
      <if test="moneyuse != null">
        #{moneyuse,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="moneybefor != null">
        #{moneybefor,jdbcType=DOUBLE},
      </if>
      <if test="emoney != null">
        #{emoney,jdbcType=DOUBLE},
      </if>
      <if test="emoneybefor != null">
        #{emoneybefor,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="posttime != null">
        #{posttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.pojo.MoneyUseExample" resultType="java.lang.Long">
    select count(*) from money_use
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update money_use
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.newusername != null">
        newusername = #{record.newusername,jdbcType=VARCHAR},
      </if>
      <if test="record.moneyuse != null">
        moneyuse = #{record.moneyuse,jdbcType=DOUBLE},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.moneybefor != null">
        moneybefor = #{record.moneybefor,jdbcType=DOUBLE},
      </if>
      <if test="record.emoney != null">
        emoney = #{record.emoney,jdbcType=DOUBLE},
      </if>
      <if test="record.emoneybefor != null">
        emoneybefor = #{record.emoneybefor,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.posttime != null">
        posttime = #{record.posttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update money_use
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      newusername = #{record.newusername,jdbcType=VARCHAR},
      moneyuse = #{record.moneyuse,jdbcType=DOUBLE},
      money = #{record.money,jdbcType=DOUBLE},
      moneybefor = #{record.moneybefor,jdbcType=DOUBLE},
      emoney = #{record.emoney,jdbcType=DOUBLE},
      emoneybefor = #{record.emoneybefor,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      posttime = #{record.posttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.MoneyUse">
    update money_use
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="newusername != null">
        newusername = #{newusername,jdbcType=VARCHAR},
      </if>
      <if test="moneyuse != null">
        moneyuse = #{moneyuse,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="moneybefor != null">
        moneybefor = #{moneybefor,jdbcType=DOUBLE},
      </if>
      <if test="emoney != null">
        emoney = #{emoney,jdbcType=DOUBLE},
      </if>
      <if test="emoneybefor != null">
        emoneybefor = #{emoneybefor,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="posttime != null">
        posttime = #{posttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.MoneyUse">
    update money_use
    set username = #{username,jdbcType=VARCHAR},
      newusername = #{newusername,jdbcType=VARCHAR},
      moneyuse = #{moneyuse,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      moneybefor = #{moneybefor,jdbcType=DOUBLE},
      emoney = #{emoney,jdbcType=DOUBLE},
      emoneybefor = #{emoneybefor,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      posttime = #{posttime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>