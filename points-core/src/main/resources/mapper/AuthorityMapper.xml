<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianbao.points.core.dao.IAuthorityDao" >

  <!-- 权限实体对象的持久化 -->
  <sql id="c_authority">
      _authority.id, _authority.code, _authority.name, _authority.url, _authority.permission,
      _authority.status, _authority.type, _authority.description, _authority.create_time createTime,
      _authority.create_user_id createUserId, _authority.update_time updateTime,
      _authority.update_user_id updateUserId
    </sql>
  <sql id="t_authority">authority</sql>

  <select id="selectByPrimaryKey" resultType="authority" parameterType="java.lang.Long" >
    select <include refid="c_authority"/>
    from <include refid="t_authority"/> _authority
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from <include refid="t_authority"/>
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <!--这个用于数据迁移-->
  <insert id="insertMigration" parameterType="authority">
    insert into <include refid="t_authority"/>
    (id, code, name, url, permission, type, description, status, create_time,
    create_user_id, update_time, update_user_id)
    values (#{id}, #{code}, #{name}, #{url}, #{permission}, #{type}, #{description}, #{status},
    #{createTime}, #{createUserId}, #{updateTime}, #{updateUserId})
  </insert>

  <insert id="insert" parameterType="authority" useGeneratedKeys="true" keyProperty="id">
    insert into <include refid="t_authority"/>
    (id, code, name, url, permission, type, description, status, create_time,
      create_user_id, update_time, update_user_id)
    values (#{id}, #{code}, #{name}, #{url}, #{permission}, #{type}, #{description}, #{status},
    #{createTime}, #{createUserId}, #{updateTime}, #{updateUserId})
  </insert>

  <insert id="insertSelective" parameterType="authority" >
    insert into <include refid="t_authority"/>
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="code != null" >
        #{code},
      </if>
      <if test="name != null" >
        #{name},
      </if>
      <if test="url != null" >
        #{url},
      </if>
      <if test="permission != null" >
        #{permission},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="description != null" >
        #{description},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="createUserId != null" >
        #{createUserId},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="authority" >
    update <include refid="t_authority"/>
    <set >
      <if test="code != null" >
        code = #{code},
      </if>
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="url != null" >
        url = #{url},
      </if>
      <if test="permission != null" >
        permission = #{permission},
      </if>
      <if test="type != null" >
        type = #{type},
      </if>
      <if test="description != null" >
        description = #{description},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="authority" >
    update <include refid="t_authority"/>
    set code = #{code},
      name = #{name},
      url = #{url},
      permission = #{permission},
      type = #{type},
      description = #{description},
      status = #{status},
      create_time = #{createTime},
      create_user_id = #{createUserId},
      update_time = #{updateTime},
      update_user_id = #{updateUserId}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--根据用户id获取所有的权限列表-->
  <select id="getListByUserId" resultType="authority">
    select <include refid="c_authority"/>
    from <include refid="t_authority"/> _authority
    left join role_authority as _role_authority on _role_authority.authority_id = _authority.id
    and _role_authority.status = 0
    left join role as _role on _role.id = _role_authority.role_id and _role.status = 0
    left join user_role as _user_role on _user_role.role_id = _role.id and _user_role.status = 0
    left join `user` as `_user` on `_user`.id = _user_role.user_id and `_user`.status = 0
    where _authority.status = 0 and `_user`.id = #{userId}
  </select>
</mapper>
