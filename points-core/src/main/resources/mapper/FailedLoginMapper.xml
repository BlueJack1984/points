<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.FailedLoginMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.FailedLogin">
    <id column="username" jdbcType="CHAR" property="username" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="num" jdbcType="BIT" property="num" />
    <result column="isadmin" jdbcType="BIT" property="isadmin" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    username, ip, time, num, isadmin
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.pojo.FailedLoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from failedlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from failedlogin
    where username = #{username,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from failedlogin
    where username = #{username,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.pojo.FailedLoginExample">
    delete from failedlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.FailedLogin">
    insert into failedlogin (username, ip, time, 
      num, isadmin)
    values (#{username,jdbcType=CHAR}, #{ip,jdbcType=CHAR}, #{time,jdbcType=INTEGER}, 
      #{num,jdbcType=BIT}, #{isadmin,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.FailedLogin">
    insert into failedlogin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="isadmin != null">
        isadmin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=BIT},
      </if>
      <if test="isadmin != null">
        #{isadmin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.pojo.FailedLoginExample" resultType="java.lang.Long">
    select count(*) from failedlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update failedlogin
    <set>
      <if test="record.username != null">
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=CHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=BIT},
      </if>
      <if test="record.isadmin != null">
        isadmin = #{record.isadmin,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update failedlogin
    set username = #{record.username,jdbcType=CHAR},
      ip = #{record.ip,jdbcType=CHAR},
      time = #{record.time,jdbcType=INTEGER},
      num = #{record.num,jdbcType=BIT},
      isadmin = #{record.isadmin,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.FailedLogin">
    update failedlogin
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=CHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=BIT},
      </if>
      <if test="isadmin != null">
        isadmin = #{isadmin,jdbcType=BIT},
      </if>
    </set>
    where username = #{username,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.FailedLogin">
    update failedlogin
    set ip = #{ip,jdbcType=CHAR},
      time = #{time,jdbcType=INTEGER},
      num = #{num,jdbcType=BIT},
      isadmin = #{isadmin,jdbcType=BIT}
    where username = #{username,jdbcType=CHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.FailedLogin">
    <id column="username" jdbcType="CHAR" property="username" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="num" jdbcType="BIT" property="num" />
    <result column="isadmin" jdbcType="BIT" property="isadmin" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    username, ip, time, num, isadmin
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.pojo.FailedLoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from failedlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from failedlogin
    where username = #{username,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from failedlogin
    where username = #{username,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.pojo.FailedLoginExample">
    delete from failedlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.FailedLogin">
    insert into failedlogin (username, ip, time, 
      num, isadmin)
    values (#{username,jdbcType=CHAR}, #{ip,jdbcType=CHAR}, #{time,jdbcType=INTEGER}, 
      #{num,jdbcType=BIT}, #{isadmin,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.FailedLogin">
    insert into failedlogin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="isadmin != null">
        isadmin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=BIT},
      </if>
      <if test="isadmin != null">
        #{isadmin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.pojo.FailedLoginExample" resultType="java.lang.Long">
    select count(*) from failedlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update failedlogin
    <set>
      <if test="record.username != null">
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=CHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=BIT},
      </if>
      <if test="record.isadmin != null">
        isadmin = #{record.isadmin,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update failedlogin
    set username = #{record.username,jdbcType=CHAR},
      ip = #{record.ip,jdbcType=CHAR},
      time = #{record.time,jdbcType=INTEGER},
      num = #{record.num,jdbcType=BIT},
      isadmin = #{record.isadmin,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.FailedLogin">
    update failedlogin
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=CHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=BIT},
      </if>
      <if test="isadmin != null">
        isadmin = #{isadmin,jdbcType=BIT},
      </if>
    </set>
    where username = #{username,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.FailedLogin">
    update failedlogin
    set ip = #{ip,jdbcType=CHAR},
      time = #{time,jdbcType=INTEGER},
      num = #{num,jdbcType=BIT},
      isadmin = #{isadmin,jdbcType=BIT}
    where username = #{username,jdbcType=CHAR}
  </update>
</mapper>