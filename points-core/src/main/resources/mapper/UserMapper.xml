<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianbao.points.core.dao.IUserDao" >

  <!-- 用户实体对象的持久化 -->
  <sql id="c_user">
     `_user`.id, `_user`.account, `_user`.password, `_user`.super_password superPassword,
     `_user`.real_name realName, `_user`.identity_number identityNumber, `_user`.nick_name nickName, `_user`.head_image headImage,
     `_user`.phone, `_user`.email, `_user`.gender, `_user`.rank_id rankId, `_user`.status,
     `_user`.question_id questionId, `_user`.answer, `_user`.last_login_ip lastLoginIp, `_user`.last_login_time lastLoginTime,
     `_user`.create_time createTime, `_user`.create_user_id createUserId,
     `_user`.update_time updateTime, `_user`.update_user_id updateUserId,
     `_user`.province, `_user`.city, `_user`.address
  </sql>
  <sql id="t_user">`user`</sql>

  <select id="selectByPrimaryKey" resultType="user" parameterType="java.lang.Long" >
    select <include refid="c_user"/>
    from <include refid="t_user"/> `_user`
    where id = #{id,jdbcType=BIGINT} and status = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from <include refid="t_user"/>
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="user" >
    insert into <include refid="t_user"/>
    (id, account, password, super_password, real_name, identity_number, nick_name, head_image, phone,
    email, gender, rank_id, status, question_id, answer, last_login_ip, last_login_time, create_time,
    create_user_id, update_time, update_user_id, province, city, address)
    values (#{id}, #{account}, #{password}, #{superPassword}, #{realName}, #{identityNumber}, #{nickName},
    #{headImage}, #{phone}, #{email}, #{gender}, #{rankId}, #{status}, #{questionId}, #{answer},
    #{lastLoginIp}, #{lastLoginTime}, #{createTime}, #{createUserId}, #{updateTime}, #{updateUserId},
    #{province}, #{city}, #{address})
  </insert>

  <insert id="insertSelective" parameterType="user" >
    insert into <include refid="t_user"/>
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="superPassword != null" >
        super_password,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="identityNumber != null" >
        identity_number,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="headImage != null" >
        head_image,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="rankId != null" >
        rank_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="account != null" >
        #{account},
      </if>
      <if test="password != null" >
        #{password},
      </if>
      <if test="superPassword != null" >
        #{superPassword},
      </if>
      <if test="realName != null" >
        #{realName},
      </if>
      <if test="identityNumber != null" >
        #{identityNumber},
      </if>
      <if test="nickName != null" >
        #{nickName},
      </if>
      <if test="headImage != null" >
        #{headImage},
      </if>
      <if test="phone != null" >
        #{phone},
      </if>
      <if test="email != null" >
        #{email},
      </if>
      <if test="gender != null" >
        #{gender},
      </if>
      <if test="rankId != null" >
        #{rankId},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="questionId != null" >
        #{questionId},
      </if>
      <if test="answer != null" >
        #{answer},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="createUserId != null" >
        #{createUserId},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId},
      </if>
      <if test="province != null">
        #{province},
      </if>
      <if test="city != null">
        #{city},
      </if>
      <if test="address != null">
        #{address},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="user" >
    update <include refid="t_user"/>
    <set >
      <if test="account != null" >
        account = #{account},
      </if>
      <if test="password != null" >
        password = #{password},
      </if>
      <if test="superPassword != null" >
        super_password = #{superPassword},
      </if>
      <if test="realName != null" >
        real_name = #{realName},
      </if>
      <if test="identityNumber != null" >
        identity_number = #{identityNumber},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName},
      </if>
      <if test="headImage != null" >
        head_image = #{headImage},
      </if>
      <if test="phone != null" >
        phone = #{phone},
      </if>
      <if test="email != null" >
        email = #{email},
      </if>
      <if test="gender != null" >
        gender = #{gender},
      </if>
      <if test="rankId != null" >
        rank_id = #{rankId},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId},
      </if>
      <if test="answer != null" >
        answer = #{answer},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId},
      </if>
      <if test="province != null">
        province = #{province},
      </if>
      <if test="city != null">
        city = #{city},
      </if>
      <if test="address != null">
        address = #{address},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="user" >
    update <include refid="t_user"/>
    set account = #{account},
      password = #{password},
      super_password = #{superPassword},
      real_name = #{realName},
      identity_number = #{identityNumber},
      nick_name = #{nickName},
      head_image = #{headImage},
      phone = #{phone},
      email = #{email},
      gender = #{gender},
      rank_id = #{rankId},
      status = #{status},
      question_id = #{questionId},
      answer = #{answer},
      last_login_ip = #{lastLoginIp},
      last_login_time = #{lastLoginTime},
      create_time = #{createTime},
      create_user_id = #{createUserId},
      update_time = #{updateTime},
      update_user_id = #{updateUserId},
      province = #{province},
      city = #{city},
      address = #{address}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--根据用户id集合查询用户列表,分页实现，用于个人积分增值属性-->
  <select id="getListByIds" resultType="user">
    select <include refid="c_user"/>
    from  <include refid="t_user"/> _user
    where _user.status = 0 and _user.id in
    <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <!--查询所有用户列表，禁用，待审核用户不在此范围,查询信息包括会员等级信息-->
  <select id="getList" resultType="user">
    select <include refid="c_user"/>
    from  <include refid="t_user"/> _user
    where _user.status = 0
  </select>

  <!--查询所有已审核用户，分页展示-->
  <select id="selectListPage" resultType="user">
    select <include refid="c_user"/>
    from <include refid="t_user"/> _user
    where _user.status = 0
    order by _user.create_time desc
  </select>

  <!--按照不同条件进行查询会员信息-->
  <select id="selectListByConditionPage" resultType="user">
    select <include refid="c_user"/>
    from <include refid="t_user"/> _user
    where _user.status = 0 and
    <choose>
      <when test="type == 0">
--         cast(_user.id as char) like concat('%', '${keyword}','%')
         _user.account like concat('%', '${keyword}','%')
      </when>
      <when test="type == 1">
        _user.phone like concat('%', '${keyword}','%')
      </when>
      <otherwise>
        _user.real_name like concat('%', '${keyword}','%')
      </otherwise>
    </choose>
    order by _user.create_time desc
  </select>

  <!--查询管理员信息列表-->
  <select id="getAdminListPage" resultType="user">
    select distinct <include refid="c_user"/>
    from <include refid="t_user"/> _user
    left join user_role as ur on ur.user_id = _user.id and ur.status = 0
    left join role as r on r.id = ur.role_id and r.status = 0
    where _user.status = 0
    and r.name like concat('%', '管理员','%')
  </select>
</mapper>