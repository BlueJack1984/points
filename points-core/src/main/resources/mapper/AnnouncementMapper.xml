<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianbao.points.core.dao.IAnnouncementDao" >

  <!-- 首页公告实体对象的持久化 -->
  <sql id="c_announcement">
      _announcement.id, _announcement.title, _announcement.content, _announcement.user_id userId,
      _announcement.status, _announcement.publish_time publishTime, _announcement.create_time createTime,
      _announcement.create_user_id createUserId, _announcement.update_time updateTime,
      _announcement.update_user_id updateUserId
    </sql>
  <sql id="t_announcement">announcement</sql>

  <select id="selectByPrimaryKey" resultType="announcement" parameterType="java.lang.Long" >
    select <include refid="c_announcement" />
    from <include refid="t_announcement"/> _announcement
    where id = #{id, jdbcType=BIGINT} and _announcement.status = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from <include refid="t_announcement"/>
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="announcement" useGeneratedKeys="true" keyProperty="id">
    insert into <include refid="t_announcement" />
    (id, title, content, user_id, publish_time, status, create_time, create_user_id, update_time, update_user_id)
    values (#{id}, #{title}, #{content}, #{userId}, #{publishTime}, #{status}, #{createTime}, #{createUserId},
    #{updateTime}, #{updateUserId})
  </insert>
  <insert id="insertSelective" parameterType="announcement" >
    insert into <include refid="t_announcement" />
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="content != null" >
        #{content},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="publishTime != null" >
        #{publishTime},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="createUserId != null" >
        #{createUserId},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="announcement" >
    update <include refid="t_announcement" />
    <set >
      <if test="title != null" >
        title = #{title},
      </if>
      <if test="content != null" >
        content = #{content},
      </if>
      <if test="userId != null" >
        user_id = #{userId},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="announcement" >
    update <include refid="t_announcement" />
    set title = #{title},
      content = #{content},
      user_id = #{userId},
      publish_time = #{publishTime},
      status = #{status},
      create_time = #{createTime},
      create_user_id = #{createUserId},
      update_time = #{updateTime},
      update_user_id = #{updateUserId}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--查询首页公告列表-->
  <select id="getListPage" resultType="announcement">
    select <include refid="c_announcement" />
    from <include refid="t_announcement"/> _announcement
    where _announcement.status = 0
    order by _announcement.publish_time desc
  </select>

  <!--根据id列表查询首页公告列表-->
  <select id="getListByIds" resultType="announcement">
    select <include refid="c_announcement" />
    from <include refid="t_announcement"/> _announcement
    where _announcement.status = 0
    and _announcement.id in
    <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <!--更新首页公告列表-->
  <update id="updateBatch">
    <foreach collection="announcementList" item="announcement" index="index" separator=";">
      UPDATE <include refid="t_announcement" />
      SET title = #{announcement.title},
      content = #{announcement.content},
      user_id = #{announcement.userId},
      publish_time = #{announcement.publishTime},
      status = #{announcement.status},
      create_time = #{announcement.createTime},
      create_user_id = #{announcement.createUserId},
      update_time = #{announcement.updateTime},
      update_user_id = #{announcement.updateUserId}
      WHERE
      id= #{announcement.id}
    </foreach>
  </update>
</mapper>