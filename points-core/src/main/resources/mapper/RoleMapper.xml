<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianbao.points.core.dao.IRoleDao" >

  <!-- 角色实体对象的持久化 -->
  <sql id="c_role">
      _role.id, _role.name, _role.description, _role.domain, _role.type, _role.status,
      _role.create_time createTime, _role.create_user_id createUserId,
      _role.update_time updateTime, _role.update_user_id updateUserId
  </sql>
  <sql id="t_role">role</sql>

  <select id="selectByPrimaryKey" resultType="role" parameterType="java.lang.Long" >
    select <include refid="c_role"/>
    from <include refid="t_role"/>  _role
    where id = #{id,jdbcType=BIGINT} and _role.status = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from <include refid="t_role"/>
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="role" >
    insert into <include refid="t_role"/>
    (id, name, description, status, domain, type, create_time, create_user_id, update_time, update_user_id)
    values (#{id}, #{name}, #{description}, #{status}, #{domain}, #{type},
    #{createTime}, #{createUserId}, #{updateTime}, #{updateUserId})
  </insert>

  <insert id="insertSelective" parameterType="role" >
    insert into <include refid="t_role"/>
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="domain != null" >
        domain,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="name != null" >
        #{name},
      </if>
      <if test="description != null" >
        #{description},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="domain != null" >
        #{domain},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="createUserId != null" >
        #{createUserId},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="role" >
    update <include refid="t_role"/>
    <set >
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="description != null" >
        description = #{description},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="domain != null" >
        domain = #{domain},
      </if>
      <if test="type != null" >
        type = #{type},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId},
      </if>
    </set>
    where id = #{id}
  </update>

  <update id="updateByPrimaryKey" parameterType="role" >
    update <include refid="t_role"/>
    set name = #{name},
      description = #{description},
      status = #{status},
      domain = #{domain},
      type = #{type},
      create_time = #{createTime},
      create_user_id = #{createUserId},
      update_time = #{updateTime},
      update_user_id = #{updateUserId}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 根据用户id来查询角色信息列表-->
  <select id="selectListByUserId" resultType="role">
    select <include refid="c_role"/>
    from <include refid="t_role"/> _role
    where _role.status = 0 and _role.id in
    (select ur.role_id from user_role as ur where ur.status = 0 and ur.user_id = #{userId})
  </select>

  <!-- 分页查询所有的表-->
  <select id="selectListPage" resultType="role">
    select <include refid="c_role"/>
    from <include refid="t_role"/> _role
    where _role.status = 0
    order by _role.id
  </select>

</mapper>